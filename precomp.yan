require('Chinese')


function 替换关键字(原始字符串)
    var s1 = 字符串.查找替换(原始字符串, '令', 'var')
    var s2 = 字符串.查找替换(s1, '如果', 'if')
    var s3 = 字符串.查找替换(s2, '那么', 'then')
    var s4 = 字符串.查找替换(s3, '否则', 'else')
    var s5 = 字符串.查找替换(s4, '结束循环', 'break')
    var s6 = 字符串.查找替换(s5, '当', 'while')
    var s7 = 字符串.查找替换(s6, '对于', 'for')
    var s8 = 字符串.查找替换(s7, ' 到 ', ' to ')
    var s9 = 字符串.查找替换(s8, ' 在 ', ' in ')
    var s10 = 字符串.查找替换(s9, '函数', 'function')
    var s11 = 字符串.查找替换(s10, ' 间隔 ', ' step ')
    var s12 = 字符串.查找替换(s11, '实例化', 'new')
    var s13 = 字符串.查找替换(s12, ' 和 ', ' and ')
    var s14 = 字符串.查找替换(s13, ' 或 ', ' or ')
    var s15 = 字符串.查找替换(s14, ' 非 ', ' not ')
    var s16 = 字符串.查找替换(s15, '返回', 'return')
    var s17 = 字符串.查找替换(s16, '结束', 'end')
    var s18 = 字符串.查找替换(s17, '继续循环', 'continue')
    var s19 = 字符串.查找替换(s18, '亦或是', 'elif')
    var s20 = 字符串.查找替换(s19, ' 是 ', ' == ')
    var s21 = 字符串.查找替换(s20, ' 为 ', ' = ')
    var s22 = 字符串.查找替换(s21, ' 中', ' then')
    var s23 = 字符串.查找替换(s22, '此对象', 'this')
    var s24 = 字符串.查找替换(s23, ' 的 ', '.')
    var s25 = 字符串.查找替换(s24, '文件流读取', 'read')
    var s26 = 字符串.查找替换(s25, '文件流写入', 'write')
    var s27 = 字符串.查找替换(s26, ' 设为 ', ': ')
    var s28 = 字符串.查找替换(s27, '确保', 'defer')
    return s28
end



function 主函数(命令行参数)
    if 取长度(命令行参数) != 2 then
        换行输出(字符串.格式化('用法: ./%s <待翻译的文件>', 命令行参数[0]))
        异常终止(空值)
    end

    var 文件名 = 命令行参数[1]
    var 文件流 = 文件.打开(文件名, 'r')
    var 文件内容 = 文件流.read()

    换行输出('require(\'Chinese\')')
    换行输出(替换关键字(文件内容))
    文件.关闭(文件流)
end


主函数(args)
